#####################################################################
# 	BTT EBB SB2209 RP2040 over CAN direct from M8P
#####################################################################

[mcu EBBCan]
canbus_uuid: 039e20f1ff4e

## SB2209 board temp sensor
[temperature_sensor EBB_NTC]
sensor_type: Generic 3950
sensor_pin: EBBCan:gpio28

#####################################################################
# 	Extruder
#####################################################################

# https://docs.vorondesign.com/community/howto/120decibell/calculating_driver_current.html
#
# MOONS' STEPPER CSE14HRA1L410A-01
#
# Rated 2A (peak)
# RMS 1.4A
# TMC2209 max = 1.2A 
# ## 0.650A > 80degF idle
#
# 1.8deg = 200 steps

[extruder]
# tested: motor turns for extrude / retract, hotend heater works
# TODO
step_pin: EBBCan:gpio18
dir_pin: !EBBCan:gpio19
enable_pin: !EBBCan:gpio17

#COPY FROM TRIDENT#
##  Update value below when you perform extruder calibration
##  If you ask for 100mm of filament, but in reality it is 98mm:
##  rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / 100
##  22.6789511 is a good starting point
rotation_distance: 22.6789511   #Bondtech 5mm Drive Gears
##  Update Gear Ratio depending on your Extruder Type
##  Use 50:10 for Stealthburner/Clockwork 2
##  Use 50:17 for Afterburner/Clockwork (BMG Gear Ratio)
##  Use 80:20 for M4, M3.1
gear_ratio: 50:10               #BMG Gear Ratio
microsteps: 16
full_steps_per_rotation: 200  # 200 for 1.8 degree, 400 for 0.9 degree

# TODO
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: EBBCan:gpio7 # 2024-12-16 works
# sensor_type: EPCOS 100K B57560G104F
# sensor_pin: EBBCan:gpio27 # Nothing connected to 27
min_temp: 0
max_temp: 270
max_power: 1.0
min_extrude_temp: 170
control: pid
pid_Kp: 21.527
pid_Ki: 1.063
pid_Kd: 108.982

## Hot end temp sensor
sensor_type: MAX31865
sensor_pin: EBBCan:gpio9 # 2024-12-16 works
spi_software_sclk_pin: EBBCan:gpio10
spi_software_mosi_pin: EBBCan:gpio8
spi_software_miso_pin: EBBCan:gpio11
# PT1000 values (PT100 = /10)
rtd_nominal_r: 1000
rtd_reference_r: 4300
rtd_num_of_wires: 2

[tmc2209 extruder]
uart_pin: EBBCan:gpio20
run_current: 0.650
stealthchop_threshold: 999999 # TODO: turn off? maybe good on extruder?



#####################################################################
# 	Fans
#####################################################################


# tested
[fan] # Part fan
pin: EBBCan:gpio13
kick_start_time: 0.5
##	Depending on your fan, you may need to increase this value
##	if your fan will not start. Can change cycle_time (increase)
##	if your fan is not able to slow down effectively
off_below: 0.10

# tested
[heater_fan hotend_fan]
pin: EBBCan:gpio14
heater: extruder
heater_temp: 50.0
max_power: 1.0
kick_start_time: 0.5
##	If you are experiencing back flow, you can reduce fan_speed
#fan_speed: 1.0

# # Don't have this fan
# # [fan_generic 4W_FAN0]
# # pin: EBBCan:gpio15
# # tachometer_pin: EBBCan:gpio12
# # #tachometer_ppr: 1

#####################################################################
# 	Probe
#####################################################################

[probe]
pin: ^EBBCan:gpio22
x_offset: 0
y_offset: 0 # 25.0, changed for TAP
z_offset: 0 # TODO manually calibrate with PROBE_CALIBRATE
speed: 10.0
samples: 3
samples_result: median
sample_retract_dist: 3.0
samples_tolerance: 0.006
samples_tolerance_retries: 3

activate_gcode:
    {% set PROBE_TEMP = 150 %}
    {% set MAX_TEMP = PROBE_TEMP + 5 %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}

    {% if TARGET_TEMP > PROBE_TEMP %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        M109 S{ PROBE_TEMP }
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}
            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
        {% endif %}
    {% endif %}

#####################################################################
# 	Filament runout sensor
#####################################################################

###
# gpio21 on it's own does not work, it needs a pullup resistor
# (I tried 10k ohm) to 5v to be able to function as a switch in 
# isolation from the rest of the "probe" pins. `^EBBCan:gpio21` 
# does not work. 
###
# [gcode_button btn21]
# pin: ^EBBCan:gpio21
# press_gcode:
#   RESPOND MSG="gpio21 PRESSED"
# release_gcode:
#   RESPOND MSG="gpio21 released"

###
# runout_gcode only runs when printer is in printing state, to test
# run `G4 PT10000` (`P<milliseconds>`) to get 10s of printing state
# to test that sensor works. 
# https://github.com/Klipper3d/klipper/issues/2859
###
[filament_switch_sensor runout_sensor]
switch_pin: EBBCan:gpio6
pause_on_runout: False
# runout_gcode: PAUSE
# insert_gcode: RESUME
insert_gcode:
  RESPOND MSG="Filament insert detected"
runout_gcode:
  RESPOND MSG="Filament runout detected"
event_delay: 0.01

# [filament_motion_sensor runout_sensor]
# switch_pin: EBBCan:gpio21
# detection_length: 7.0
# #   The minimum length of filament pulled through the sensor to trigger
# #   a state change on the switch_pin
# #   Default is 7 mm.
# extruder: extruder
# #   The name of the extruder section this sensor is associated with.
# #   This parameter must be provided.
# insert_gcode:
#   RESPOND MSG="Filament insert detected"
# runout_gcode:
#   RESPOND MSG="Filament runout detected"
# # pause_on_runout: False
# # runout_gcode: PAUSE
# # insert_gcode: RESUME

#####################################################################
# 	RGB
#####################################################################

[neopixel sb_rgb]
# https://github.com/sttts/voron-klipper-config/blob/master/stealthburner_leds.cfg
#https://docs.vorondesign.com/community/howto/drachenkatze/neopixel_guide.html
pin: EBBCan:gpio16
chain_count: 3
#   The number of Neopixel chips that are "daisy chained" to the
#   provided pin. The default is 1 (which indicates only a single
#   Neopixel is connected to the pin).
color_order: GRBW


#####################################################################
# 	Leftover template code from btt-ebb template file
#####################################################################

# [adxl345]
# cs_pin: EBBCan:gpio1
# spi_software_sclk_pin: EBBCan:gpio2
# spi_software_mosi_pin: EBBCan:gpio0
# spi_software_miso_pin: EBBCan:gpio3
# axes_map: z,-y,x

# [resonance_tester]
# probe_points: 100, 100, 20
# accel_chip: adxl345


# [bltouch]
# sensor_pin: ^EBBCan:gpio21
# control_pin: EBBCan:gpio22

# ## NPN and PNP proximity switch types can be set by jumper
# [probe]
# pin: ^EBBCan:gpio6

